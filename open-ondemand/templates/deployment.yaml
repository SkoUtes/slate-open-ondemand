apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "open-ondemand.fullname" . }}
  labels:
    {{- include "open-ondemand.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "open-ondemand.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "open-ondemand.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: shared-data
          emptyDir: {}
        - name: auth-config
          configMap:
            name: {{ include "open-ondemand.fullname" . }}-auth-config
            items:
            - key: auth_openidc.sh
              path: auth_openidc.sh
            defaultMode: 0700
        - name: ood-portal-config
          configMap:
            name: {{ include "open-ondemand.fullname" . }}-ood-portal
            items:
            - key: ood_portal.yml
              path: ood_portal.yml
        - name: keycloak-setup
          configMap:
            name: {{ include "open-ondemand.fullname" . }}-keycloak-setup
            defaultMode: 0744 
        - name: secret-volume
          secret:
            secretName: {{ include "open-ondemand.fullname" . }}-keycloak-password
        # Claim SLATE volume to persist Keycloak data.
        - name: keycloak-db
          persistentVolumeClaim:
            claimName: {{ .Values.claimName }}
      containers:
        - name: open-ondemand
          image: dockerbox88/open-ondemand
          imagePullPolicy: Always
          lifecycle:
            postStart:
              exec:
                command: ["/bin/bash", "/opt/rh/httpd24/root/etc/httpd/conf.d/auth_openidc.sh"]
          volumeMounts:
            - name: shared-data
              mountPath: /shared
            - name: auth-config
              mountPath: /opt/rh/httpd24/root/etc/httpd/conf.d/auth_openidc.sh
              subPath: auth_openidc.sh
            - name: ood-portal-config
              mountPath: /etc/ood/config/ood_portal.yml
              subPath: ood_portal.yml
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: INSTANCE_NAME
              value: {{ include "open-ondemand.fullname" . }}
            - name: CLUSTER_DNS
              value: {{ .Values.SLATE.Cluster.DNSName }}
        - name: keycloak
          image: jboss/keycloak
          imagePullPolicy: Always
          # Run script if setupKeycloak parameter is enabled.
          {{ if eq .Values.setupKeycloak true }}
          lifecycle:
            postStart:
              exec:
                command: ["/bin/bash", "/etc/keycloak/keycloak-setup.sh"]
          {{ end }}
          volumeMounts:
            - name: shared-data
              mountPath: /shared
            - name: keycloak-setup
              mountPath: /etc/keycloak/
            - name: secret-volume
              mountPath: /secret-volume
              # Mount SLATE volume to the location of the Keycloak database.
            - name: keycloak-db
              mountPath: "/opt/jboss/keycloak/standalone/data"
          env:
            - name: PROXY_ADDRESS_FORWARDING
              value: "true" 
              # Set Keycloak default username and password
            - name: KEYCLOAK_USER
              value: "admin"
            - name: KEYCLOAK_PASSWORD
              value: {{ randAlphaNum 12 | b64enc | quote }}
              # Specify database type (default Java H2 database)
            - name: DB_VENDOR 
              value: "h2"
          ports:
            - name: kc8080
              containerPort: 8080
              protocol: TCP
---
